# Include your custom_postgui HAL commands here
# This file will not be overwritten when you run PNCconf again


#add functions to servo-thread
addf and2.0 servo-thread
addf and2.1 servo-thread
addf and2.2 servo-thread
addf and2.3 servo-thread
addf and2.4 servo-thread
addf and2.5 servo-thread
addf and2.6 servo-thread
addf and2.7 servo-thread
addf and2.8 servo-thread
addf lut5.0 servo-thread
addf lut5.1 servo-thread
addf lut5.2 servo-thread
addf lut5.3 servo-thread
addf lut5.4 servo-thread
addf or2_1 servo-thread
addf or2_3 servo-thread
addf or2_4 servo-thread
addf or2_5 servo-thread
addf flipflop_0 servo-thread
addf conv_feed servo-thread
addf conv_mpg servo-thread
addf mult2.0 servo-thread
addf jog_speed_scale servo-thread
addf rapid_speed_mux servo-thread
addf not.0 servo-thread
addf not.1 servo-thread
addf not.2 servo-thread
addf not.3 servo-thread


setp lut5.0.function 0x8000
setp lut5.1.function 0x8000
setp lut5.2.function 0x8000
setp lut5.3.function 0xffffffed
setp lut5.4.function 0xfffffff9


# connect user pannel
#Wire the run-mode toggle
net _machine_program_mode pyvcp.machine-mode.Program => halui.mode.auto
net _machine_mdi_mode pyvcp.machine-mode.MDI => halui.mode.mdi
net _machine_manual_mode <= pyvcp.machine-mode.Manual => halui.mode.manual


net _program_auto_mode <= pyvcp.run-mode.Auto
net _program_single_mode <= pyvcp.run-mode.Single
net _program_jog_mode <= pyvcp.run-mode.Jog
#net _auto_mode halui.mode.auto pyvcp.run-mode.Auto
#net _single_mode pyvcp.run-mode.Single



#wire the CYCLE/PAUSE buttons
net _cycle-button <= pyvcp.cycle-button
net _program.is-idle <= halui.program.is-idle
net _program.is-paused <= halui.program.is-paused
net _program.is-running <= halui.program.is-running
#program start
net _program_run => halui.program.run
net _cycle-button => lut5.0.in-0
net _program.is-idle => lut5.0.in-1
net _program_auto_mode => lut5.0.in-2
net _machine_program_mode => lut5.0.in-3
net _program_run <= lut5.0.out
#program step
net _program_step => halui.program.step
net _cycle-button => lut5.1.in-0
net _program_single_mode => lut5.1.in-1
net _program_single_mode => lut5.1.in-2
net _machine_program_mode => lut5.1.in-3
net _program_step <= lut5.1.out
#program resume
net _cycle-button => lut5.2.in-0
net _program.is-paused => lut5.2.in-1
net _program_auto_mode => lut5.2.in-2
net _machine_program_mode => lut5.2.in-3
net _program_resume lut5.2.out => halui.program.resume
#program pause
net _pause-button <= pyvcp.pause-button
net _program_pause => halui.program.pause
net _program.is-paused => flipflop_0.reset 
net _program_single_mode => flipflop_0.set
net _flipflop_0_out flipflop_0.out => or2_1.in0
net _pause-button => or2_1.in1
net _machine_program_mode => and2.2.in0
net _or2_1_out or2_1.out => and2.2.in1
net _program_pause <= and2.2.out

#LEDs
net _program.is-running => pyvcp.cycle-led
net _program.is-paused => pyvcp.pause-led
net _flood_is_on halui.flood.is-on => pyvcp.coolant-led
net _spindle_is_on halui.spindle.0.is-on => pyvcp.spindle-led

#Feed/Rapid override
net _feed_override pyvcp.feed-pot-f => conv_feed.in
net _feed_override_int conv_feed.out
setp halui.feed-override.direct-value true
setp halui.feed-override.count-enable true
setp halui.feed-override.scale 0.01
net _feed_override_int => halui.feed-override.counts
setp halui.rapid-override.direct-value true
setp halui.rapid-override.count-enable true
setp halui.rapid-override.scale 0.01
net _feed_override_int => halui.rapid-override.counts


#Rapid buttons
#get max speeds and feed-override
net _rapid_speed_mux_in0 ini.0.max_velocity => rapid_speed_mux.in0 
net _rapid_speed_mux_in1 ini.1.max_velocity => rapid_speed_mux.in1 
net _rapid_speed_mux_in2 ini.2.max_velocity => rapid_speed_mux.in2 
net _rapid_speed_mux_sel0 => rapid_speed_mux.sel0
net _rapid_speed_mux_sel1 => rapid_speed_mux.sel1

net _feed_override => mult2.0.in0
net _max_jog_speed => mult2.0.in1
setp jog_speed_scale.gain 0.01
net _mult2_0_out mult2.0.out => jog_speed_scale.in
net _jog_speed_scfale_out jog_speed_scale.out => halui.axis.jog-speed



#rapid x-axis
net _program_single_mode => and2.3.in0
net _jog_x_plus pyvcp.x-plus => and2.3.in1
net _and2_3_out and2.3.out => halui.axis.x.plus
net _program_single_mode => and2.4.in0
net _jog_x_minus pyvcp.x-minus => and2.4.in1
net _and2_4_out and2.4.out => halui.axis.x.minus
net _jog_x_plus pyvcp.x-plus => or2_3.in0
net _jog_x_minus pyvcp.x-minus => or2_3.in1
net _or2_3_out <= or2_3.out
net _or2_3_out => lut5.3.in-0
net _or2_3_out => lut5.4.in-0

#rapid y-axis
net _program_single_mode => and2.5.in0
net _jog_y_plus pyvcp.y-plus => and2.5.in1
net _and2_5_out and2.5.out => halui.axis.y.plus
net _program_single_mode => and2.6.in0
net _jog_y_minus pyvcp.y-minus => and2.6.in1
net _and2_6_out and2.6.out => halui.axis.y.minus
net _jog_y_plus pyvcp.y-plus => or2_4.in0
net _jog_y_minus pyvcp.y-minus => or2_4.in1
net _or2_4_out <= or2_4.out
net _or2_4_out => lut5.3.in-1
net _or2_4_out => lut5.4.in-1

#rapid z-axis
net _program_single_mode => and2.7.in0
net _jog_z_plus pyvcp.z-plus => and2.7.in1
net _and2_7_out and2.7.out => halui.axis.z.plus
net _program_single_mode => and2.8.in0
net _jog_z_minus pyvcp.z-minus => and2.8.in1
net _and2_8_out and2.8.out => halui.axis.z.minus
net _jog_z_plus pyvcp.z-plus => or2_5.in0
net _jog_z_minus pyvcp.z-minus => or2_5.in1
net _or2_5_out <= or2_5.out
net _or2_5_out => lut5.3.in-2
net _or2_5_out => lut5.4.in-2

#connect to speed selector mux
net _rapid_speed_mux_sel0 <= lut5.3.out
net _rapid_speed_mux_sel1 <= lut5.4.out
net _max_jog_speed <= rapid_speed_mux.out 

#switch on all leds
net _program_single_mode => pyvcp.x-led
net _program_single_mode => pyvcp.y-led
net _program_single_mode => pyvcp.z-led

#Jog-wheel
setp axis.x.jog-enable true
setp axis.y.jog-enable true
setp axis.z.jog-enable true
setp axis.x.jog-scale 0.01
setp axis.y.jog-scale 0.01
setp axis.z.jog-scale 0.01
setp axis.x.jog-vel-mode true
setp axis.y.jog-vel-mode true
setp axis.z.jog-vel-mode true
net _conv_mpg_in pyvcp.my-wheel => conv_mpg.in
net _conv_mpg_out conv_mpg.out

net _conv_mpg_out => axis.x.jog-counts